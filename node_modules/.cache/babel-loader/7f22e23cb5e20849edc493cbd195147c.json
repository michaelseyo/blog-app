{"ast":null,"code":"var _jsxFileName = \"/Users/Mike/Desktop/projects/blog-app/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { collection, deleteDoc, getDocs, doc } from 'firebase/firestore';\nimport { auth, db } from '../firebase-config';\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  btn: {\n    margin: 10\n  },\n  post: {\n    margin: 40,\n    padding: 20\n  },\n  postHeader: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n});\n\nfunction Home(_ref) {\n  _s();\n\n  let {\n    isAuth\n  } = _ref;\n  const classes = useStyles();\n  const [postList, setPostList] = useState([]);\n  const postsCollectionRef = collection(db, \"posts\");\n  useEffect(() => {\n    const getPosts = async () => {\n      const data = await getDocs(postsCollectionRef);\n\n      if (data.docs.length > 0) {\n        setPostList(data.docs.map(doc => ({ ...doc.data(),\n          id: doc.id\n        })));\n      }\n    };\n\n    getPosts();\n  }, []);\n\n  const deletePost = async id => {\n    const postDoc = doc(db, \"posts\", id);\n    await deleteDoc(postDoc);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: postList.map(post => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.post,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.postHeader,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h2\",\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), isAuth && auth.currentUser.uid === post.author.id && /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.btn,\n            onClick: () => {\n              deletePost(post.id);\n            },\n            startIcon: /*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 40\n            }, this),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: post.postText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"@\", post.author.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"7K1LG8o+lqr2JBzBlfraFIw3RvM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/Mike/Desktop/projects/blog-app/src/pages/Home.js"],"names":["React","useEffect","useState","collection","deleteDoc","getDocs","doc","auth","db","Card","Button","Container","DeleteOutlineIcon","makeStyles","Typography","useStyles","btn","margin","post","padding","postHeader","display","alignItems","Home","isAuth","classes","postList","setPostList","postsCollectionRef","getPosts","data","docs","length","map","id","deletePost","postDoc","title","currentUser","uid","author","postText","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { collection, deleteDoc, getDocs, doc } from 'firebase/firestore';\nimport { auth, db } from '../firebase-config'\nimport Card from \"@material-ui/core/Card\"\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { makeStyles, Typography } from \"@material-ui/core\"\n\nconst useStyles = makeStyles({\n    btn: {\n        margin: 10\n    }, \n    post: {\n        margin: 40,\n        padding: 20\n    },\n    postHeader: {\n        display: \"flex\",\n        alignItems: \"center\"\n    }\n});\n\nfunction Home({isAuth}) {\n    const classes = useStyles();\n    const [postList, setPostList] = useState([]);\n    const postsCollectionRef = collection(db, \"posts\");\n\n    useEffect(() => {\n        const getPosts = async () => {\n            const data = await getDocs(postsCollectionRef);\n            if (data.docs.length > 0) {\n                setPostList(data.docs.map((doc) => (\n                    {...doc.data(), id: doc.id }\n                )));\n            }\n        };\n        getPosts();\n    }, [])\n\n    const deletePost = async (id) => {\n        const postDoc = doc(db, \"posts\", id)\n        await deleteDoc(postDoc);\n    }\n\n    return (\n    <Container> \n        {postList.map((post) => {\n        return (\n            <Card className={classes.post} key={post.id}> \n                <div className={classes.postHeader}>\n                    <Typography\n                        variant=\"h4\"\n                        component=\"h2\"\n                    >   \n                        {post.title}\n                    </Typography>\n                    {isAuth && auth.currentUser.uid === post.author.id && (\n                        <Button \n                            className = {classes.btn}\n                            onClick={() => {\n                                deletePost(post.id)\n                            }}\n                            startIcon={<DeleteOutlineIcon/>}\n                        >\n                            Delete\n                        </Button>\n                    )}   \n                </div>\n                <Typography>\n                    {post.postText}\n                </Typography>\n                <Typography\n                    variant=\"h6\"\n                >\n                    @{post.author.name}\n                </Typography>\n            </Card>\n        );\n        })} \n    </Container>\n    );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}