{"ast":null,"code":"var _jsxFileName = \"/Users/Mike/Desktop/projects/blog-app/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from '../firebase-config';\nimport { Container, makeStyles } from \"@material-ui/core\";\nimport PostCard from \"../components/PostCard\";\nimport Infographic from \"../components/Infographic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  homeContainer: {\n    margin: 20\n  }\n});\n\nfunction Home(_ref) {\n  _s();\n\n  let {\n    isAuth\n  } = _ref;\n  const classes = useStyles();\n  const [postList, setPostList] = useState([]);\n  const postsCollectionRef = collection(db, \"posts\");\n  useEffect(() => {\n    const getPosts = async () => {\n      const data = await getDocs(postsCollectionRef);\n\n      if (data.docs.length > 0) {\n        setPostList(data.docs.map(doc => ({ ...doc.data(),\n          id: doc.id\n        })));\n      }\n    };\n\n    getPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.homeContainer,\n    children: [/*#__PURE__*/_jsxDEV(Infographic, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), postList.map(post => {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        isAuth: isAuth,\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"7K1LG8o+lqr2JBzBlfraFIw3RvM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/Mike/Desktop/projects/blog-app/src/pages/Home.js"],"names":["React","useEffect","useState","collection","getDocs","db","Container","makeStyles","PostCard","Infographic","useStyles","homeContainer","margin","Home","isAuth","classes","postList","setPostList","postsCollectionRef","getPosts","data","docs","length","map","doc","id","post"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,SAASC,EAAT,QAAmB,oBAAnB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,mBAAtC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AACzBI,EAAAA,aAAa,EAAE;AACXC,IAAAA,MAAM,EAAE;AADG;AADU,CAAD,CAA5B;;AAMA,SAASC,IAAT,OAAwB;AAAA;;AAAA,MAAV;AAACC,IAAAA;AAAD,GAAU;AACpB,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMgB,kBAAkB,GAAGf,UAAU,CAACE,EAAD,EAAK,OAAL,CAArC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkB,QAAQ,GAAG,YAAY;AACzB,YAAMC,IAAI,GAAG,MAAMhB,OAAO,CAACc,kBAAD,CAA1B;;AACA,UAAIE,IAAI,CAACC,IAAL,CAAUC,MAAV,GAAmB,CAAvB,EAA0B;AACtBL,QAAAA,WAAW,CAACG,IAAI,CAACC,IAAL,CAAUE,GAAV,CAAeC,GAAD,KACtB,EAAC,GAAGA,GAAG,CAACJ,IAAJ,EAAJ;AAAgBK,UAAAA,EAAE,EAAED,GAAG,CAACC;AAAxB,SADsB,CAAd,CAAD,CAAX;AAGH;AACJ,KAPD;;AAQAN,IAAAA,QAAQ;AACX,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAEJ,OAAO,CAACJ,aAA9B;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAIKK,QAAQ,CAACO,GAAT,CAAcG,IAAD,IAAU;AACpB,0BAAO,QAAC,QAAD;AAAU,QAAA,MAAM,EAAEZ,MAAlB;AAA0B,QAAA,IAAI,EAAEY;AAAhC,SAA2CA,IAAI,CAACD,EAAhD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA3BQZ,I;UACWH,S;;;KADXG,I;AA6BT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from '../firebase-config'\nimport { Container, makeStyles } from \"@material-ui/core\";\nimport PostCard from \"../components/PostCard\";\nimport Infographic from \"../components/Infographic\";\n\nconst useStyles = makeStyles({\n    homeContainer: {\n        margin: 20\n    }\n});\n\nfunction Home({isAuth}) {\n    const classes = useStyles();\n    const [postList, setPostList] = useState([]);\n    const postsCollectionRef = collection(db, \"posts\");\n\n    useEffect(() => {\n        const getPosts = async () => {\n            const data = await getDocs(postsCollectionRef);\n            if (data.docs.length > 0) {\n                setPostList(data.docs.map((doc) => (\n                    {...doc.data(), id: doc.id }\n                )));\n            }\n        };\n        getPosts();\n    }, [])\n\n    return (\n        <Container className={classes.homeContainer}>\n            <Infographic>\n\n            </Infographic>\n            {postList.map((post) => {\n                return <PostCard isAuth={isAuth} post={post} key={post.id}/>\n            })} \n        </Container>\n    );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}