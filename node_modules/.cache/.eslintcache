[{"/Users/Mike/Desktop/projects/blog-app/src/index.js":"1","/Users/Mike/Desktop/projects/blog-app/src/App.js":"2","/Users/Mike/Desktop/projects/blog-app/src/reportWebVitals.js":"3","/Users/Mike/Desktop/projects/blog-app/src/pages/Home.js":"4","/Users/Mike/Desktop/projects/blog-app/src/pages/CreatePost.js":"5","/Users/Mike/Desktop/projects/blog-app/src/pages/Login.js":"6","/Users/Mike/Desktop/projects/blog-app/src/firebase-config.js":"7","/Users/Mike/Desktop/projects/blog-app/src/pages/ErrorPage.js":"8","/Users/Mike/Desktop/projects/blog-app/src/components/PostCard.js":"9"},{"size":478,"mtime":1641815981498,"results":"10","hashOfConfig":"11"},{"size":1926,"mtime":1642168597224,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1641815501674,"results":"13","hashOfConfig":"11"},{"size":927,"mtime":1642243607283,"results":"14","hashOfConfig":"11"},{"size":2837,"mtime":1642172167903,"results":"15","hashOfConfig":"11"},{"size":781,"mtime":1641888055867,"results":"16","hashOfConfig":"11"},{"size":1054,"mtime":1641823316623,"results":"17","hashOfConfig":"11"},{"size":126,"mtime":1641991189630,"results":"18","hashOfConfig":"11"},{"size":1680,"mtime":1642243510508,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1jr1akw",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Mike/Desktop/projects/blog-app/src/index.js",[],["42","43"],"/Users/Mike/Desktop/projects/blog-app/src/App.js",[],"/Users/Mike/Desktop/projects/blog-app/src/reportWebVitals.js",[],"/Users/Mike/Desktop/projects/blog-app/src/pages/Home.js",["44"],"import React, { useEffect, useState } from \"react\";\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from '../firebase-config'\nimport Container from \"@material-ui/core/Container\";\nimport PostCard from \"../components/PostCard\"\n\nfunction Home({isAuth}) {\n    const [postList, setPostList] = useState([]);\n    const postsCollectionRef = collection(db, \"posts\");\n\n    useEffect(() => {\n        const getPosts = async () => {\n            const data = await getDocs(postsCollectionRef);\n            if (data.docs.length > 0) {\n                setPostList(data.docs.map((doc) => (\n                    {...doc.data(), id: doc.id }\n                )));\n            }\n        };\n        getPosts();\n    }, [])\n\n    return (\n        <Container> \n            {postList.map((post) => {\n                return <PostCard isAuth={isAuth} post={post}/>\n            })} \n        </Container>\n    );\n}\n\nexport default Home;","/Users/Mike/Desktop/projects/blog-app/src/pages/CreatePost.js",["45"],"import React, { useState, useEffect } from \"react\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { auth, db } from \"../firebase-config\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Container, CardContent, Typography, TextField } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles({\n    postHeader: {\n        marginTop: 20\n    },\n    field: {\n        marginTop: 10,\n        marginBottom: 10,\n        display: \"block\"\n    }\n});\n\nfunction CreatePost({isAuth}) {\n    const classes = useStyles();\n    const [title, setTitle] = useState(\"\");\n    const [titleError, setTitleError] = useState(false);\n    const [postText, setPostText] = useState(\"\");\n    const [postTextError, setPostTextError] = useState(false);\n\n    const postsCollectionRef = collection(db, \"posts\");\n    let navigate = useNavigate();\n    const createPost = async () => {\n        setTitleError(false);\n        setPostTextError(false);\n        if (title && postText) {\n            await addDoc(postsCollectionRef, {\n                title,\n                postText,\n                author: {\n                    name: auth.currentUser.displayName,\n                    id: auth.currentUser.uid\n                }\n            });\n            navigate(\"/\");\n        } else {\n            if (!title) {\n                setTitleError(true);\n            } \n            if (!postText) { \n                setPostTextError(true);\n            } \n        }\n    }\n\n    useEffect(() => {\n        if (!isAuth) {\n            navigate(\"/login\");\n        }\n    }, []);\n\n    return (\n        <Container>\n            <Typography \n                className={classes.postHeader}\n                variant=\"h4\"\n                component=\"h2\"\n            >\n                Create a post\n            </Typography>\n            <CardContent>\n                <TextField\n                    className={classes.field}\n                    label=\"Title\"\n                    fullWidth\n                    required\n                    variant=\"outlined\"\n                    onChange={(e) => {setTitle(e.currentTarget.value)}}\n                    error={titleError}\n                />\n                <TextField \n                    className={classes.field}\n                    label=\"Post\"\n                    fullWidth\n                    required\n                    variant=\"outlined\"\n                    multiline\n                    rows={4}\n                    onChange={(e) => {setPostText(e.currentTarget.value)}}\n                    error={postTextError}\n                />\n            </CardContent>\n            <Button \n                variant=\"outlined\" \n                onClick={createPost}\n            > \n                Submit \n            </Button>\n        </Container>\n    );\n}\n\nexport default CreatePost;","/Users/Mike/Desktop/projects/blog-app/src/pages/Login.js",[],"/Users/Mike/Desktop/projects/blog-app/src/firebase-config.js",["46"],"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\"\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC0PZnpcJGkmo5z_f3Z5YD2t9HRQqx8m_g\",\n  authDomain: \"web-app-35adf.firebaseapp.com\",\n  projectId: \"web-app-35adf\",\n  storageBucket: \"web-app-35adf.appspot.com\",\n  messagingSenderId: \"1009694409427\",\n  appId: \"1:1009694409427:web:a50bf97509dbf19b2d4a26\",\n  measurementId: \"G-R3ZXNQY4SZ\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\nexport const db = getFirestore(app);\nexport const auth = getAuth(app)\nexport const provider = new GoogleAuthProvider();","/Users/Mike/Desktop/projects/blog-app/src/pages/ErrorPage.js",[],"/Users/Mike/Desktop/projects/blog-app/src/components/PostCard.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":21,"column":8,"nodeType":"53","endLine":21,"endColumn":10,"suggestions":"54"},{"ruleId":"51","severity":1,"message":"55","line":55,"column":8,"nodeType":"53","endLine":55,"endColumn":10,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":23,"column":7,"nodeType":"59","messageId":"60","endLine":23,"endColumn":16},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postsCollectionRef'. Either include it or remove the dependency array.","ArrayExpression",["63"],"React Hook useEffect has missing dependencies: 'isAuth' and 'navigate'. Either include them or remove the dependency array.",["64"],"no-unused-vars","'analytics' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Update the dependencies array to be: [postsCollectionRef]",{"range":"69","text":"70"},"Update the dependencies array to be: [isAuth, navigate]",{"range":"71","text":"72"},[719,721],"[postsCollectionRef]",[1596,1598],"[isAuth, navigate]"]